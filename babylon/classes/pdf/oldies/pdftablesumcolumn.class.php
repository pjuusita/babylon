<?php

//********************************************************************************************************************************************************************
//**
//**
//********************************************************************************************************************************************************************

class PDFTableSumColumn extends PDFComponent {

	public $column_name 	= null;
	public $column_width 	= null;
	public $column_height 	= null;
	public $primary_column 	= true;
	public $sumFormat		= 'timedifference';
	public $currentSum		= 0;
	public $type			= 'sumcolumn';
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	public function __construct($column_name,$column_datavariable,$column_width,$sumFormat) {

		$this->column_name 			= $column_name;
		$this->column_datavariable 	= $column_datavariable;
		$this->column_width 		= $column_width;
		$this->sumFormat			= $sumFormat;

	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	public function setWidth($width) {
		
		$this->column_width = $width;
		
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	public function setDatavariable($datavariable) {
		
		$this->column_datavariables = $datavariable;
		
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	public function format($value) {
		
		return $value;
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	public function setName($name) {
		
		$this->column_name = $name;
		
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	public function sum($value) {
	
		if ($value=='Ei tyavuoroja') return;
		
		$sumFormat = $this->sumFormat;
		
		if ($sumFormat=='timedifference') $this->timeDifference($value);
		if ($sumFormat=='time') $this->timeSum($value);
		if ($sumFormat=='double') $this->doubleSum($value);
		
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	public function getCurrentSum() {

		$sumFormat = $this->sumFormat;
		
		$retval	   = null;
		
		if ($sumFormat=='timedifference') $retval = $this->getCurrentTimeDifferenceSum();
		if ($sumFormat=='time') 		  $retval = $this->getCurrentTimeSum();
		if ($sumFormat=='double')		  $retval = $this->getCurrentDoubleSum();
		
		return $retval;
		
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	private function getCurrentTimeDifferenceSum() {
		
		$currentSum 	= $this->currentSum;
		
		$hours			= floor($currentSum / 60);
		$minutes		= $currentSum % 60;
		
		if (strlen($hours)==0) $hours	  ='00';
		if (strlen($hours)==1) $hours 	  = '0'.$hours;
		
		if (strlen($minutes)==0) $minutes ='00';
		if (strlen($minutes)==1) $minutes = '0'.$minutes;
		
		$time			= $hours.":".$minutes;
		
		return $time;
		
		
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	private function getCurrentTimeSum() {
		
		$currentSum	= $this->currentSum;
		
		$hours			= floor($currentSum / 60);
		$minutes		= $currentSum % 60;
		
		if (strlen($hours)==0) $hours	  ='00';
		if (strlen($hours)==1) $hours 	  = '0'.$hours;
		
		if (strlen($minutes)==0) $minutes ='00';
		if (strlen($minutes)==1) $minutes = '0'.$minutes;
		
		$time			= $hours.",".$minutes;
		
		return $time;
		
		
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	public function setCurrentSum($value) {
		
		$this->currentSum = intval($value);
		
	}	
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	public function getCurrentDoubleSum() {
		
		$currentSum	= $this->currentSum;
		
		return $currentSum;
		
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	private function timeDifference($value) {

		$currentSum			 = $this->currentSum;
		$timeComponents 	 = explode("-",$value);
		
		$startTime			 = explode(":",$timeComponents[0]);
		$endTime			 = explode(":",$timeComponents[1]);
		
		$startMinutes		 = intval($startTime[1]) + (60 * intval($startTime[0]));
		$endMinutes			 = intval($endTime[1]) + (60 * intval($endTime[0]));
		
		$difference 		 = $endMinutes - $startMinutes;
		
		if ($difference<0) $difference = (24 * 60) - $difference;
		
 		$currentSum			 = $currentSum + $difference;
		
		$this->currentSum	 = $currentSum;
		
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	private function timeSum($value) {
		
		$currentSum			 = $this->currentSum;
		
		$timeComponents		 = explode(",",$value);
		
		$hours				 = intval($timeComponents[0]*60);
		$minutes			 = intval($timeComponents[1]);
		
		$currentSum			 = $currentSum + $hours + $minutes;
		
		$this->currentSum	 = $currentSum;
		
	}

	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	private function doubleSum($value) {
		
		$currentSum 		= $this->currentSum;
		
		$add				= doubleval($value);
		$currentSum			= $currentSum + $add;
		
		$this->currentSum 	= $currentSum;
		
	}
	
	//********************************************************************************************************************************************************************
	//**
	//**
	//********************************************************************************************************************************************************************
	
	public function show() {
		
	}
}
?>